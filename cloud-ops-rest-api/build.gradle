project(':cloud-ops-rest-api') {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'war'


    dependencies {
        compile project(':cloud-ops-ui')
        compile project(':cloud-ops-dao')
        compile project(':cloud-ops-security')
        compile project(':cloud-ops-esc')
//        compile("org.springframework.boot:spring-boot-devtools")
//        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
        compile("org.springframework.boot:spring-boot-starter-tomcat")
        compile ('org.springframework.boot:spring-boot-starter-web:1.5.2.RELEASE'){
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        }
//        compile 'org.springframework.boot:spring-boot-starter-security:1.5.2.RELEASE'
        compile 'org.springframework.boot:spring-boot-starter-websocket:1.5.2.RELEASE'
        compile 'org.springframework:springloaded:1.2.6.RELEASE'
        /*compile("com.inspur.cloudframework:spring-side:4.1.0-SNAPSHOT"){
            exclude group: 'javax.servlet', module: 'servlet-api'
        }*/
//        compile "mysql:mysql-connector-java:5.1.21"
        compile("io.springfox:springfox-swagger2:2.2.2")
        compile("io.springfox:springfox-swagger-ui:2.2.2")

        testCompile("org.springframework.boot:spring-boot-starter-test:1.5.2.RELEASE")
    }

    idea {
        module {
            inheritOutputDirs = false
            outputDir = file("$buildDir/classes/main/")
        }
    }

    bootRun {
        addResources = true
//        jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"
    }

    /*springBoot {
        executable = true
    }*/

    war {
        archiveName = 'cloud-ops.war'
        destinationDir = file "docker-dir"
    }
}
